[{"/Users/zbo/Documents/RENCI/pub-connect/frontend/src/index.js":"1","/Users/zbo/Documents/RENCI/pub-connect/frontend/src/reportWebVitals.js":"2","/Users/zbo/Documents/RENCI/pub-connect/frontend/src/App.js":"3","/Users/zbo/Documents/RENCI/pub-connect/frontend/src/views/Login.js":"4","/Users/zbo/Documents/RENCI/pub-connect/frontend/src/views/Submit.js":"5","/Users/zbo/Documents/RENCI/pub-connect/frontend/src/views/Home.js":"6","/Users/zbo/Documents/RENCI/pub-connect/frontend/src/views/Verify.js":"7","/Users/zbo/Documents/RENCI/pub-connect/frontend/src/helper/format.js":"8","/Users/zbo/Documents/RENCI/pub-connect/frontend/src/components/prizes.js":"9"},{"size":500,"mtime":1607468872912,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607468872913,"results":"12","hashOfConfig":"11"},{"size":561,"mtime":1619535825320,"results":"13","hashOfConfig":"11"},{"size":3776,"mtime":1623879093215,"results":"14","hashOfConfig":"11"},{"size":3639,"mtime":1623878990084,"results":"15","hashOfConfig":"11"},{"size":7068,"mtime":1623294327943,"results":"16","hashOfConfig":"11"},{"size":11735,"mtime":1629829661553,"results":"17","hashOfConfig":"11"},{"size":91,"mtime":1620073722620,"results":"18","hashOfConfig":"11"},{"size":653,"mtime":1623879061324,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"71q85t",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/zbo/Documents/RENCI/pub-connect/frontend/src/index.js",[],["42","43"],"/Users/zbo/Documents/RENCI/pub-connect/frontend/src/reportWebVitals.js",[],"/Users/zbo/Documents/RENCI/pub-connect/frontend/src/App.js",[],"/Users/zbo/Documents/RENCI/pub-connect/frontend/src/views/Login.js",["44","45","46","47","48","49","50"],"import React, { useState } from 'react';\nimport { Link } from '@reach/router';\nimport '../App.css';\nimport PubConnectLarge from '../PC-large.png'\nimport { Button, Heading, TextField, Typography } from '@material-ui/core';\nimport { Card, CardContent } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport ClearIcon from '@material-ui/icons/Clear'\nimport { Prizes } from '../components/prizes';\nimport PrizeLogo from '../prizes.png';\n\nconst useStyles = makeStyles((theme) => ({\n    input: {\n        margin: theme.spacing(1)\n    },\n    card: {\n        backgroundColor: '#00758d',\n        color: 'white',\n        fontSize: 16\n    }\n}))\n\nfunction Login() {\n    sessionStorage.clear();\n    const [usernames, setUserNames] = useState([\"\"]);\n    const [namesCounter, setNamesCounter] = useState([0]);\n    const [email, setEmail] = useState();\n    const classes = useStyles();\n\n    const addNameField = () => {\n        setNamesCounter([...namesCounter, namesCounter.length]);\n        setUserNames([...usernames, \"\"]);\n    }\n\n    const removeNameField = (index) => {\n        let removedArray = usernames.slice();\n        removedArray.splice(index, 1);\n        setUserNames(removedArray);\n    }\n\n    return (\n        <div style={{ height: '100%', margin: 0 }}>\n            <div className=\"login_wrap\">\n                <div className=\"logoBar\"><a><img className=\"login_logo\" src={PubConnectLarge}></img></a></div>\n                <div className=\"form\">\n                    <div className=\"form-text\">\n                        <div>The survey should take about 10 minutes to complete and has two short parts:\n                            <p className=\"form-bullet\">1) We identify you in Microsoft Academic by whatever name(s) you have published under. </p>\n                            <p className=\"form-bullet\">2) Then we show you all the papers listed for you in Microsoft Academic and ask you to select the testbed(s) used in that research.</p>\n                        </div>\n                    </div>\n                    <Typography>Enter your first and last name in the fields below.</Typography> <Typography>If you have published under more than one name, please click the + button to add those other names.</Typography>\n                    <div className=\"form-action\">\n                        <div className=\"form-action-input\">\n                            {usernames.map((username, index) =>\n                                <div key=\"index\" className=\"login_namefield\"><TextField variant=\"outlined\" label=\"Name\" fullWidth=\"true\" className={classes.input} value={username} placeholder=\"John Doe\" onChange={(e) => {\n                                    let newArray = usernames.slice();\n                                    newArray[index] = e.target.value;\n                                    setUserNames(newArray);\n                                }}></TextField>{index === 0 ? <span /> : <ToggleButton size=\"small\" onClick={() => removeNameField(index)}><ClearIcon /></ToggleButton>}</div>)}</div>\n                        <br />\n                        <div><ToggleButton size=\"small\" className=\"toggle_addName\" onClick={addNameField}><AddIcon /></ToggleButton> Add another name you have published under</div>\n                        <Link className=\"login_button\" to=\"/home\" state={{ userInfo: [usernames, email] }} > <Button fullWidth=\"true\" variant=\"outlined\" size=\"large\" color=\"primary\">Start Survey</Button></Link>\n                    </div>\n                </div >\n                <br />\n                <img className=\"prize-logo\" src={PrizeLogo} />\n                <Prizes />\n            </div >\n        </div>\n    )\n}\n\nexport default Login;","/Users/zbo/Documents/RENCI/pub-connect/frontend/src/views/Submit.js",["51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, Card, CardContent, Container, Checkbox, Table, TableBody, TableCell, TableHead, TableRow, Typography, Select, makeStyles } from '@material-ui/core';\nimport '../App.css';\nimport { Prizes } from '../components/prizes';\nimport EnterPrizeLogo from '../entered.png'\nimport ThankYouLogo from '../thanks.png';\nimport PubConnectLarge from '../PC-large.png'\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        marginTop: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '800px'\n    },\n    btn: {\n        marginTop: 20\n    },\n    heading: {\n        textAlign: 'center'\n    },\n    indented: {\n        padding: '0 20px'\n    }\n}))\n\nfunction reviver(key, value) {\n    if (typeof value === 'object' && value !== null) {\n        if (value.dataType === 'Map') {\n            return new Map(value.value);\n        }\n    }\n    return value;\n}\n\nfunction Submit(props) {\n    const classes = useStyles();\n    const userIDs = JSON.parse(sessionStorage.getItem('home'));\n    const userName = JSON.parse(sessionStorage.getItem('login'));\n    const nameMap = JSON.parse(sessionStorage.getItem('nameMap'), reviver);\n\n    let renderNameID = {};\n    userIDs.forEach(id => {\n        if (!(nameMap.get(id[0]) in renderNameID)) {\n            let newIDList = [];\n            newIDList.push(id[0])\n            renderNameID[nameMap.get(id[0])] = newIDList;\n        }\n        else {\n            let oldIDList = renderNameID[nameMap.get(id[0])];\n            oldIDList.push(id[0]);\n        }\n    });\n\n    return (\n        <div className=\"wrapper\">\n            <div className={classes.container}>\n                <div className=\"logoBar\"><a><img className=\"logo-small\" src={PubConnectLarge}></img></a></div>\n                <br />\n                <img className=\"submit-thank-logo\" src={ThankYouLogo} />\n                {/* <div>\n                    <br />\n                    <Typography>Here are the named entries we found for you in Microsoft Academic:</Typography>\n                    <div className={classes.indented}>\n                        <ul>\n                            {Object.keys(renderNameID).map(name => <li>{name} (\n                                {renderNameID[name].map((id, index) => <span>{index > 0 ? ', ' : ''}<a href={`http://academic.microsoft.com/author/${id}`} target=\"_blank\">{index + 1}</a></span>)}\n\n                            )</li>)}\n                        </ul>\n                    </div>\n                    <br />\n                    <Typography>If youâ€™d like to learn more about creating a profile page in Academic, here is a <a href=\"https://www.microsoft.com/en-us/research/project/academic/articles/keep-your-profile-and-yourself-up-to-date/#:~:text=You%20may%20search%20for%20your,and%20selecting%20%E2%80%9CManage%20Claims.%E2%80%9D\" target=\"_blank\">blog post</a> that shows you how.</Typography>\n                </div> */}\n                <img className=\"submit-entered-logo\" src={EnterPrizeLogo} />\n                <div className={classes.indented}>\n                    <Prizes />\n                </div>\n                <br />\n                <Typography>\n                    You can gain additional raffle tickets by completing other tasks such as referring someone else to take the survey. Want to learn more? Then visit our <a href=\"https://gleam.io/\" target=\"_blank\">Gleam.io</a> page for other opportunities to win!\n                </Typography>\n                <br />\n            </div>\n        </div>\n    )\n}\n\nexport default Submit;","/Users/zbo/Documents/RENCI/pub-connect/frontend/src/views/Home.js",["70","71","72","73","74","75","76","77","78","79","80","81","82","83","84"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport PubConnectLarge from '../PC-large.png';\nimport { Link } from '@reach/router';\nimport '../App.css';\nimport { capitalizeFirstLetter } from '../helper/format';\n\nimport { Button, Card, CardContent, Checkbox, Typography, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(2),\n        backgroundColor: '#d9d9d9',\n        width: '50%',\n        cursor: 'pointer'\n    },\n    link_button: {\n        margin: theme.spacing(2),\n        textDecoration: 'none',\n        width: '8vw'\n    }\n}))\n\nfunction Home(props) {\n    let userInfo;\n    if (sessionStorage.getItem('login') === null) {\n        userInfo = props.location.state.userInfo;\n        sessionStorage.setItem('login', JSON.stringify(userInfo))\n    }\n    else {\n        userInfo = JSON.parse(sessionStorage.getItem('login'))\n    }\n    let counter = 0;\n    const classes = useStyles();\n    const [nameMap, setNameMap] = useState();\n    const [isLoading, setLoading] = useState(true);\n    const [authorIDArray, setAuthorIDArray] = useState([]);\n    const [authorArticle, setAuthorArticle] = useState([]);\n    const [checkedArray, setCheckArray] = useState(sessionStorage.getItem('home') === null ? [] : JSON.parse(sessionStorage.getItem('home')));\n\n    function capitalizeFirstLetter(s) {\n        return s[0].toUpperCase() + s.slice(1);\n    }\n\n    function capitalizeAuthorName(s) {\n        s = capitalizeFirstLetter(s)\n        return s.replaceAll(/ [a-z]/g, z => z.toUpperCase());\n    }\n\n    function findAfN(author_lists, author_id) {\n        for (let i = 0; i < author_lists.length; i++) {\n            let curr_author = author_lists[i];\n            if (curr_author['AuId'] === author_id) {\n                return curr_author['AfN'];\n            }\n        }\n    }\n\n    useEffect(async () => {\n        let tem = [];\n        let tem_NameMap = new Map();\n        for await (let i of userInfo[0]) {\n            let lowerCaseName = i.toLowerCase();\n            axios({\n                method: 'GET',\n                url: 'https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate',\n                params: {\n                    expr: `Composite(AA.AuN=='${lowerCaseName}')`,\n                    attributes: 'AA.AuId,AA.AuN,AA.DAuN',\n                    'subscription-key': 'f6714001211242e982d92a3646ececed',\n                    count: 100\n                }\n            }).then(res => {\n                console.log(res.data.entities);\n                let ids = new Set();\n                for (let article in res.data.entities) {\n                    for (let author in res.data.entities[article].AA) {\n                        if (res.data.entities[article].AA[author].AuN == lowerCaseName) {\n                            ids.add(res.data.entities[article].AA[author].AuId);\n                            tem_NameMap.set(res.data.entities[article].AA[author].AuId, res.data.entities[article].AA[author].DAuN)\n                        }\n                    }\n                }\n                tem.push(Array.from(ids));\n                if (tem.length == userInfo[0].length) {\n                    let newArray = Array.prototype.concat.apply([], tem);\n                    newArray.sort();\n                    setAuthorIDArray(newArray);\n                    setNameMap(tem_NameMap);\n                }\n            }).catch(e => {\n                console.log(e);\n            })\n        }\n    }, [])\n\n    useEffect(async () => {\n        let tem = [];\n        let visited = [];\n        for (let index in authorIDArray) {\n            const currentAuthorID = authorIDArray[index];\n            const result = await axios({\n                method: 'GET',\n                url: 'https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate',\n                params: {\n                    expr: `Composite(AA.AuId=${currentAuthorID})`,\n                    attributes: 'AA.AuId,AA.AfN,AA.AuN,DOI,Id,Ti,VFN,Y,CC',\n                    'subscription-key': 'f6714001211242e982d92a3646ececed',\n                    count: 1000\n                }\n            }).then(res => {\n                if (res.data.entities.length !== 0) {\n                    tem.push([currentAuthorID, findAfN(res.data.entities[0]['AA'], currentAuthorID), res.data.entities[0]]);\n                }\n                visited.push(\"1\");\n                if (visited.length == authorIDArray.length) {\n                    setAuthorArticle(authorArticle.concat(tem));\n                }\n            }).catch(e => {\n                console.log(e);\n            })\n        }\n    }, [authorIDArray])\n\n    const checkIfInArray = (array, item) => {\n        for (let i = 0; i < array.length; i++) {\n            if (array[i][0] === item[0] && array[i][1] === item[1]) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    const handleCheckBox = props => {\n        let index = checkIfInArray(checkedArray, props);\n        if (index !== -1) {\n            let newArray = [...checkedArray];\n            newArray.splice(index, 1);\n            setCheckArray(newArray);\n        }\n        else {\n            let newArray = [...checkedArray, props];\n            setCheckArray(newArray);\n        }\n    }\n\n    const renderAuthorList = authors => {\n        let authorList = \"\";\n        for (let id in authors) {\n            if (authorList !== '') authorList += \", \"\n            authorList += capitalizeAuthorName(authors[id].AuN)\n        }\n        return authorList;\n    }\n\n    return (\n        <div class=\"container\">\n            <div className=\"logoBar\"><a><img className=\"logo-small\" src={PubConnectLarge}></img></a></div>\n            <Typography><Link className=\"clean-button\" to='/'><Button variant=\"outlined\" color=\"primary\" onClick={() => sessionStorage.clear()}><ReplayIcon />Start Over</Button></Link></Typography>\n            <div className=\"home_text\"><p>Based on the name(s) you provided, we have found <b>{authorArticle.length}</b> possible authors listed in Microsoft Academic that could be you. Please select the papers below that you authored.</p>\n            </div>\n            <div class=\"home_card_container\">\n                {authorArticle.map(this_author => <Card className={classes.card} onClick={() => { handleCheckBox(this_author) }}>\n                    <CardContent><Checkbox checked={checkIfInArray(checkedArray, this_author) !== -1}></Checkbox>\n                        <Typography>{renderAuthorList(this_author[2].AA)}</Typography><Typography><i>{capitalizeFirstLetter(this_author[2].Ti)}</i></Typography><Typography>{this_author[2].VFN == undefined ? \"\" : this_author[2].VFN + \", \"}{this_author[2].Y}</Typography></CardContent>\n                </Card>)}\n            </div>\n            <Link className={classes.link_button} to=\"/verify\" state={{ checkedArray: checkedArray, userInfo: userInfo, nameMap: nameMap }}><Button fullWidth variant=\"outlined\" color=\"primary\">Continue</Button></Link>\n\n        </div>\n    )\n}\n\nexport default Home;","/Users/zbo/Documents/RENCI/pub-connect/frontend/src/views/Verify.js",["85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102"],"/Users/zbo/Documents/RENCI/pub-connect/frontend/src/helper/format.js",[],"/Users/zbo/Documents/RENCI/pub-connect/frontend/src/components/prizes.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":5,"column":18,"nodeType":"109","messageId":"110","endLine":5,"endColumn":25},{"ruleId":"107","severity":1,"message":"111","line":6,"column":10,"nodeType":"109","messageId":"110","endLine":6,"endColumn":14},{"ruleId":"107","severity":1,"message":"112","line":6,"column":16,"nodeType":"109","messageId":"110","endLine":6,"endColumn":27},{"ruleId":"107","severity":1,"message":"113","line":29,"column":19,"nodeType":"109","messageId":"110","endLine":29,"endColumn":27},{"ruleId":"114","severity":1,"message":"115","line":46,"column":42,"nodeType":"116","endLine":46,"endColumn":45},{"ruleId":"117","severity":1,"message":"118","line":46,"column":45,"nodeType":"116","endLine":46,"endColumn":95},{"ruleId":"117","severity":1,"message":"118","line":69,"column":17,"nodeType":"116","endLine":69,"endColumn":63},{"ruleId":"107","severity":1,"message":"119","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"120","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":13},{"ruleId":"107","severity":1,"message":"121","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":16},{"ruleId":"107","severity":1,"message":"111","line":3,"column":18,"nodeType":"109","messageId":"110","endLine":3,"endColumn":22},{"ruleId":"107","severity":1,"message":"112","line":3,"column":24,"nodeType":"109","messageId":"110","endLine":3,"endColumn":35},{"ruleId":"107","severity":1,"message":"122","line":3,"column":37,"nodeType":"109","messageId":"110","endLine":3,"endColumn":46},{"ruleId":"107","severity":1,"message":"123","line":3,"column":48,"nodeType":"109","messageId":"110","endLine":3,"endColumn":56},{"ruleId":"107","severity":1,"message":"124","line":3,"column":58,"nodeType":"109","messageId":"110","endLine":3,"endColumn":63},{"ruleId":"107","severity":1,"message":"125","line":3,"column":65,"nodeType":"109","messageId":"110","endLine":3,"endColumn":74},{"ruleId":"107","severity":1,"message":"126","line":3,"column":76,"nodeType":"109","messageId":"110","endLine":3,"endColumn":85},{"ruleId":"107","severity":1,"message":"127","line":3,"column":87,"nodeType":"109","messageId":"110","endLine":3,"endColumn":96},{"ruleId":"107","severity":1,"message":"128","line":3,"column":98,"nodeType":"109","messageId":"110","endLine":3,"endColumn":106},{"ruleId":"107","severity":1,"message":"129","line":3,"column":120,"nodeType":"109","messageId":"110","endLine":3,"endColumn":126},{"ruleId":"107","severity":1,"message":"130","line":42,"column":11,"nodeType":"109","messageId":"110","endLine":42,"endColumn":19},{"ruleId":"114","severity":1,"message":"115","line":61,"column":42,"nodeType":"116","endLine":61,"endColumn":45},{"ruleId":"117","severity":1,"message":"118","line":61,"column":45,"nodeType":"116","endLine":61,"endColumn":95},{"ruleId":"117","severity":1,"message":"118","line":63,"column":17,"nodeType":"116","endLine":63,"endColumn":73},{"ruleId":"117","severity":1,"message":"118","line":78,"column":17,"nodeType":"116","endLine":78,"endColumn":77},{"ruleId":"131","severity":1,"message":"132","line":84,"column":200,"nodeType":"133","endLine":84,"endColumn":215},{"ruleId":"107","severity":1,"message":"134","line":7,"column":10,"nodeType":"109","messageId":"110","endLine":7,"endColumn":31},{"ruleId":"107","severity":1,"message":"135","line":34,"column":9,"nodeType":"109","messageId":"110","endLine":34,"endColumn":16},{"ruleId":"107","severity":1,"message":"136","line":37,"column":12,"nodeType":"109","messageId":"110","endLine":37,"endColumn":21},{"ruleId":"107","severity":1,"message":"137","line":37,"column":23,"nodeType":"109","messageId":"110","endLine":37,"endColumn":33},{"ruleId":"138","severity":1,"message":"139","line":60,"column":15,"nodeType":"140","endLine":96,"endColumn":6},{"ruleId":"141","severity":1,"message":"142","line":79,"column":71,"nodeType":"143","messageId":"144","endLine":79,"endColumn":73},{"ruleId":"141","severity":1,"message":"142","line":86,"column":32,"nodeType":"143","messageId":"144","endLine":86,"endColumn":34},{"ruleId":"138","severity":1,"message":"145","line":96,"column":8,"nodeType":"146","endLine":96,"endColumn":10,"suggestions":"147"},{"ruleId":"138","severity":1,"message":"139","line":98,"column":15,"nodeType":"140","endLine":124,"endColumn":6},{"ruleId":"107","severity":1,"message":"148","line":103,"column":19,"nodeType":"109","messageId":"110","endLine":103,"endColumn":25},{"ruleId":"141","severity":1,"message":"142","line":117,"column":36,"nodeType":"143","messageId":"144","endLine":117,"endColumn":38},{"ruleId":"138","severity":1,"message":"149","line":124,"column":8,"nodeType":"146","endLine":124,"endColumn":23,"suggestions":"150"},{"ruleId":"114","severity":1,"message":"115","line":159,"column":38,"nodeType":"116","endLine":159,"endColumn":41},{"ruleId":"117","severity":1,"message":"118","line":159,"column":41,"nodeType":"116","endLine":159,"endColumn":91},{"ruleId":"141","severity":1,"message":"142","line":166,"column":193,"nodeType":"143","messageId":"144","endLine":166,"endColumn":195},{"ruleId":"151","severity":1,"message":"152","line":87,"column":13,"nodeType":"109","messageId":"153","endLine":87,"endColumn":21},{"ruleId":"107","severity":1,"message":"154","line":112,"column":11,"nodeType":"109","messageId":"110","endLine":112,"endColumn":19},{"ruleId":"138","severity":1,"message":"139","line":124,"column":15,"nodeType":"140","endLine":176,"endColumn":6},{"ruleId":"107","severity":1,"message":"148","line":132,"column":19,"nodeType":"109","messageId":"110","endLine":132,"endColumn":25},{"ruleId":"155","severity":1,"message":"156","line":141,"column":21,"nodeType":"140","messageId":"157","endLine":172,"endColumn":14},{"ruleId":"107","severity":1,"message":"158","line":142,"column":21,"nodeType":"109","messageId":"110","endLine":142,"endColumn":23},{"ruleId":"107","severity":1,"message":"159","line":144,"column":21,"nodeType":"109","messageId":"110","endLine":144,"endColumn":34},{"ruleId":"141","severity":1,"message":"142","line":149,"column":27,"nodeType":"143","messageId":"144","endLine":149,"endColumn":29},{"ruleId":"138","severity":1,"message":"160","line":176,"column":8,"nodeType":"146","endLine":176,"endColumn":10,"suggestions":"161"},{"ruleId":"138","severity":1,"message":"162","line":182,"column":8,"nodeType":"146","endLine":182,"endColumn":18,"suggestions":"163"},{"ruleId":"107","severity":1,"message":"164","line":188,"column":14,"nodeType":"109","messageId":"110","endLine":188,"endColumn":34},{"ruleId":"141","severity":1,"message":"142","line":209,"column":19,"nodeType":"143","messageId":"144","endLine":209,"endColumn":21},{"ruleId":"141","severity":1,"message":"142","line":209,"column":46,"nodeType":"143","messageId":"144","endLine":209,"endColumn":48},{"ruleId":"141","severity":1,"message":"142","line":214,"column":37,"nodeType":"143","messageId":"144","endLine":214,"endColumn":39},{"ruleId":"107","severity":1,"message":"165","line":228,"column":15,"nodeType":"109","messageId":"110","endLine":228,"endColumn":28},{"ruleId":"114","severity":1,"message":"115","line":248,"column":206,"nodeType":"116","endLine":248,"endColumn":209},{"ruleId":"117","severity":1,"message":"118","line":248,"column":209,"nodeType":"116","endLine":248,"endColumn":259},{"ruleId":"141","severity":1,"message":"142","line":250,"column":23,"nodeType":"143","messageId":"144","endLine":250,"endColumn":25},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'Heading' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'CardContent' is defined but never used.","'setEmail' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useState' is defined but never used.","'axios' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","'Checkbox' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Select' is defined but never used.","'userName' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'capitalizeFirstLetter' is defined but never used.","'counter' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.","ArrayExpression",["168"],"'result' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'authorArticle'. Either include it or remove the dependency array. You can also do a functional update 'setAuthorArticle(a => ...)' if you only need 'authorArticle' in the 'setAuthorArticle' call.",["169"],"no-use-before-define","'navigate' was used before it was defined.","usedBeforeDefined","'saveUser' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'tem', 'tem', 'tem'.","unsafeRefs","'id' is assigned a value but never used.","'fullYearPaper' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currUser'. Either include it or remove the dependency array.",["170"],"React Hook useEffect has missing dependencies: 'currPageTotal' and 'papers'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrPaper' needs the current value of 'papers'.",["171"],"'capitalizeAuthorName' is defined but never used.","'insert_result' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [userInfo]",{"range":"180","text":"181"},"Update the dependencies array to be: [authorArticle, authorIDArray]",{"range":"182","text":"183"},"Update the dependencies array to be: [currUser]",{"range":"184","text":"185"},"Update the dependencies array to be: [currPage, currPageTotal, papers]",{"range":"186","text":"187"},[3539,3541],"[userInfo]",[4674,4689],"[authorArticle, authorIDArray]",[5923,5925],"[currUser]",[6079,6089],"[currPage, currPageTotal, papers]"]