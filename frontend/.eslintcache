[{"/usr/src/app/src/index.js":"1","/usr/src/app/src/reportWebVitals.js":"2","/usr/src/app/src/App.js":"3","/usr/src/app/src/views/Home.js":"4","/usr/src/app/src/views/Submit.js":"5","/usr/src/app/src/views/Login.js":"6","/usr/src/app/src/views/Verify.js":"7"},{"size":500,"mtime":1607468872912,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1607468872913,"results":"10","hashOfConfig":"9"},{"size":535,"mtime":1617247618900,"results":"11","hashOfConfig":"9"},{"size":6873,"mtime":1618440811293,"results":"12","hashOfConfig":"9"},{"size":2193,"mtime":1617248426326,"results":"13","hashOfConfig":"9"},{"size":5419,"mtime":1618440596775,"results":"14","hashOfConfig":"9"},{"size":10751,"mtime":1618433306895,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1vlkc7c",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/usr/src/app/src/index.js",[],["33","34"],"/usr/src/app/src/reportWebVitals.js",[],"/usr/src/app/src/App.js",[],"/usr/src/app/src/views/Home.js",["35","36","37","38","39","40","41","42","43","44","45","46","47","48"],"/usr/src/app/src/views/Submit.js",["49","50","51","52","53","54","55","56","57","58","59","60","61"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, Card, CardContent, Container, Checkbox, Table, TableBody, TableCell, TableHead, TableRow, Typography, Select, makeStyles } from '@material-ui/core';\nimport '../App.css';\nimport PubConnectSmall from '../PC-small.png';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        marginTop: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    btn: {\n        marginTop: 20\n    },\n    card: {\n        backgroundColor: '#00758d',\n        color: 'white'\n    }\n}))\n\nfunction Submit(props) {\n    const classes = useStyles();\n    const userIDs = JSON.parse(sessionStorage.getItem('home'));\n    const handleDataSubmit = () => {\n        axios({\n            url: 'http://localhost:5000/insert',\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: JSON.stringify(props.location)\n        }).then(res => console.log(res))\n            .catch(e => console.log(e))\n    }\n\n    return (\n        <div className={classes.container}>\n            <div className=\"logoBar\"><a><img className=\"logo-small\" src={PubConnectSmall}></img></a></div>\n            <Card className={classes.card}><CardContent>Thank you so much for taking the time to complete this survey!\n        <hr />\n                <p>Prize:</p>\n                <p>Participation Prize | Sticker (Chameleon, FABRIC, CloudLab?) | First 175 to complete the survey\n                Postage</p>\n                <p>Second Prize | $25 Amazon Gift Card | 6 Recipients selected by Gleam.io at random</p>\n                <p>First Prize | $50 Amazon Gift Card | 3 Recipients selected by Gleam.io at random</p>\n                <p>Grand Prize | FABRIC Beta Tester or Travel | 10 Recipients selected by Gleam.io at random</p>\n            </CardContent></Card>\n            <br />\n            <Typography>We found {userIDs.length} names for you in Microsoft Academic.</Typography>\n            { userIDs.map(id => <Typography>ID: {id}</Typography>)}\n            <br />\n        </div>\n    )\n}\n\nexport default Submit;","/usr/src/app/src/views/Login.js",["62","63","64","65"],"/usr/src/app/src/views/Verify.js",["66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link, useNavigate } from '@reach/router';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { Button, Card, CardContent, Container, Checkbox, Table, TableBody, TableCell, TableHead, TableRow, Typography, Select, makeStyles, FormHelperText } from '@material-ui/core';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport PubConnectSmall from '../PC-small.png';\nimport '../App.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: 20\n    },\n    yearTag: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    yearBtn: {\n        margin: theme.spacing(1)\n    },\n    buttonContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingTop: 15,\n        paddingBottom: 15,\n        width: '80vw'\n    },\n    submitBtn: {\n        textDecoration: 'none'\n    },\n    topBar: {\n        position: 'absolute',\n        left: '2vw'\n    },\n    firstItemInYear: {\n        paddingTop: 10,\n        fontSize: 19\n    },\n    root: {\n        borderTop: '1px solid rgba(224, 224, 224, 1)',\n        borderBottom: '0px'\n    },\n    card: {\n        backgroundColor: '#d9d9d9'\n    },\n    right_button: {\n        position: 'absolute',\n        marginLeft: '60vw',\n        width: '15vw'\n    }\n}))\n\nfunction Verify(props) {\n    let checkedInfo;\n    console.log(props.location.state)\n    if (props.location.state === null) {\n        if (sessionStorage.getItem('home') === null) {\n            navigate('/', { replace: true })\n        }\n        else {\n            checkedInfo = JSON.parse(sessionStorage.getItem('home'))\n        }\n    }\n    else {\n        checkedInfo = props.location.state.checkedArray;\n        sessionStorage.setItem('home', JSON.stringify(checkedInfo));\n    }\n    const currUser = checkedInfo;\n    const classes = useStyles();\n    const [papers, setPaper] = useState([]);\n    const [currPaper, setCurrPaper] = useState([]);\n    const [currPage, setCurrPage] = useState(1);\n    const [currPageTotal, setPageTotal] = useState(0);\n    const [checkedList, setCheckList] = useState({});\n    const [results, setResults] = useState({});\n    const [submitForm, setSubmitForm] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(async () => {\n        let tem = [];\n        let tem_results = {};\n        for (let index in currUser) {\n            const currAuthorID = currUser[index];\n            console.log(currAuthorID)\n            const result = await axios({\n                method: 'GET',\n                url: 'https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate',\n                params: {\n                    expr: `And(Composite(AA.AuId=${currAuthorID}), Y>=2011)`,\n                    attributes: 'Y,AA.AuId,AA.AuN,Id,DOI,Ti,VFN',\n                    'subscription-key': 'f6714001211242e982d92a3646ececed',\n                    count: 1000\n                }\n            }).then(res => {\n                let id = 0;\n                let years = [];\n                let fullYearPaper = {};\n                let namelist = [];\n                let filteredArray = [];\n                let tem_checklist = {};\n                tem = tem.concat(res.data.entities);\n                if (index == currUser.length - 1) {\n                    tem.forEach(paper => {\n                        if (!namelist.includes(paper.Ti)) {\n                            // find the first item in a year, give a first field\n                            if (!years.includes(paper.Y)) {\n                                paper['firstItemInYear'] = true;\n                                years.push(paper.Y);\n                            }\n                            filteredArray.push(paper);\n                            namelist.push(paper.Ti);\n                            tem_checklist[paper.Id] = [false, false, false, true];\n                            tem_results[paper.Id] = paper;\n                        }\n                    })\n                    filteredArray.sort((a, b) => {\n                        return b.Y - a.Y\n                    });\n                    setCheckList(sessionStorage.getItem('checklist') === null ? tem_checklist : JSON.parse(sessionStorage.getItem('checklist')));\n                    setResults(tem_results);\n                    setPaper(filteredArray);\n                    setCurrPaper(filteredArray.slice(0, 10));\n                    setPageTotal(Math.ceil(filteredArray.length / 10))\n                }\n            }).catch(e => {\n                console.log(e);\n            })\n        }\n    }, [])\n\n    useEffect(() => {\n        if (currPageTotal !== 0) {\n            setCurrPaper(papers.slice(10 * (currPage - 1), 10 * (currPage)))\n        }\n    }, [currPage])\n\n    function capitalizeFirstLetter(s) {\n        return s[0].toUpperCase() + s.slice(1);\n    }\n\n    function capitalizeAuthorName(s) {\n        s = capitalizeFirstLetter(s)\n        return s.replaceAll(/ [a-z]/g, z => z.toUpperCase());\n    }\n\n    const renderAuthorList = authors => {\n        let authorList = \"\";\n        for (let id in authors) {\n            if (authorList !== '') authorList += \", \"\n            authorList += capitalizeAuthorName(authors[id].AuN)\n        }\n        return authorList;\n    }\n\n\n    const handlePageChange = (event, value) => {\n        results['checklist'] = checkedList;\n        axios({\n            url: 'http://localhost:5000/save',\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: JSON.stringify(results)\n        }).then(res => { })\n            .catch(e => console.log(e))\n        setCurrPage(value);\n    }\n\n    const handleCheckBox = (id, field) => {\n        let newCheckList = JSON.parse(JSON.stringify(checkedList));\n        if (field == 3 && checkedList[id][3] == false) {\n            newCheckList[id][0] = false;\n            newCheckList[id][1] = false;\n            newCheckList[id][2] = false;\n        }\n        else if (checkedList[id][3] == true) {\n            newCheckList[id][3] = false;\n        }\n        newCheckList[id][parseInt(field)] = !checkedList[id][parseInt(field)];\n        setCheckList(newCheckList);\n        sessionStorage.setItem('checklist', JSON.stringify(newCheckList));\n    }\n\n    const handleDataSubmit = () => {\n        results['checklist'] = checkedList;\n        axios({\n            url: 'http://localhost:5000/insert',\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: JSON.stringify(results)\n        }).then(res => {\n            //navigate('/submit', { replace: true })\n        }).catch(e => console.log(e))\n    }\n\n    return (\n        <div>\n            <Container className={classes.container}>\n                <div className=\"logoBar\"><a><img className=\"logo-small\" src={PubConnectSmall}></img></a></div>\n                <br />\n                {currPage == 1 ? <Card className={classes.card}><CardContent>Based on the name(s) you gave us at the start of the survey, we have pulled all the papers listed in Microsoft Academic that you have authored since 2011. Please select the testbed(s) that were used in the research about which the paper reports. By default, None (meaning no testbed was used) is checked.</CardContent></Card> : <span />}\n                <br />\n                <div className={classes.buttonContainer}><div className={classes.topBar}><Link className=\"clean-button\" to='/home'><Button variant=\"outlined\" color=\"primary\"><ArrowBackIcon />Go Back</Button></Link></div><Pagination count={currPageTotal} page={currPage} onChange={handlePageChange} /></div>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Year</TableCell>\n                            <TableCell></TableCell>\n                            <TableCell>GENI</TableCell>\n                            <TableCell>Cloudlab</TableCell>\n                            <TableCell>Chameleon</TableCell>\n                            <TableCell>None</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {currPaper.map((paper, index) => <TableRow key={paper.Ti}>{\n                            paper.firstItemInYear || index === 0 ? <TableCell classes={{ root: classes.root }}><Typography className={classes.firstItemInYear}><b>{paper.Y}</b></Typography></TableCell> : <span></span>\n                        }\n                            <TableCell><div><Typography><i>{capitalizeFirstLetter(paper.Ti)}</i></Typography><Typography>{renderAuthorList(paper.AA)}</Typography><Typography>{paper.VFN}</Typography></div></TableCell>\n                            <TableCell><Checkbox checked={checkedList[paper.Id][0]} onChange={() => handleCheckBox(paper.Id, 0)}></Checkbox></TableCell>\n                            <TableCell><Checkbox checked={checkedList[paper.Id][1]} onChange={() => handleCheckBox(paper.Id, 1)}></Checkbox></TableCell>\n                            <TableCell><Checkbox checked={checkedList[paper.Id][2]} onChange={() => handleCheckBox(paper.Id, 2)}></Checkbox></TableCell>\n                            <TableCell><Checkbox checked={checkedList[paper.Id][3]} onChange={() => handleCheckBox(paper.Id, 3)}></Checkbox></TableCell>\n                        </TableRow>)}\n                    </TableBody>\n                </Table>\n                <Dialog open={submitForm} onClose={() => setSubmitForm(false)}>\n                    <DialogContent>Are you sure to submit your survey?</DialogContent>\n                    <DialogActions><Button color=\"primary\" onClick={handleDataSubmit}>Yes</Button><Button color=\"secondary\" onClick={() => setSubmitForm(false)}>No</Button></DialogActions>\n                </Dialog>\n                <div className={classes.buttonContainer}>\n                    <Pagination count={currPageTotal} page={currPage} onChange={handlePageChange} />{currPage === currPageTotal ? <div className={classes.right_button}><Button variant=\"outlined\" fullWidth=\"true\" onClick={() => setSubmitForm(true)} color=\"secondary\">Submit</Button></div> : <div className={classes.right_button}><Button color=\"primary\" fullWidth=\"true\" variant=\"outlined\" onClick={() => setCurrPage(currPage + 1)}>Next</Button></div>}\n                </div>\n            </Container>\n        </div>\n    )\n}\n\nexport default Verify;",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":30,"column":9,"nodeType":"91","messageId":"92","endLine":30,"endColumn":16},{"ruleId":"89","severity":1,"message":"93","line":32,"column":12,"nodeType":"91","messageId":"92","endLine":32,"endColumn":21},{"ruleId":"89","severity":1,"message":"94","line":32,"column":23,"nodeType":"91","messageId":"92","endLine":32,"endColumn":33},{"ruleId":"95","severity":1,"message":"96","line":46,"column":15,"nodeType":"97","endLine":79,"endColumn":6},{"ruleId":"98","severity":1,"message":"99","line":63,"column":71,"nodeType":"100","messageId":"101","endLine":63,"endColumn":73},{"ruleId":"98","severity":1,"message":"99","line":70,"column":32,"nodeType":"100","messageId":"101","endLine":70,"endColumn":34},{"ruleId":"95","severity":1,"message":"102","line":79,"column":8,"nodeType":"103","endLine":79,"endColumn":10,"suggestions":"104"},{"ruleId":"95","severity":1,"message":"96","line":81,"column":15,"nodeType":"97","endLine":111,"endColumn":6},{"ruleId":"89","severity":1,"message":"105","line":86,"column":19,"nodeType":"91","messageId":"92","endLine":86,"endColumn":25},{"ruleId":"98","severity":1,"message":"99","line":103,"column":36,"nodeType":"100","messageId":"101","endLine":103,"endColumn":38},{"ruleId":"95","severity":1,"message":"106","line":111,"column":8,"nodeType":"103","endLine":111,"endColumn":23,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":140,"column":38,"nodeType":"110","endLine":140,"endColumn":41},{"ruleId":"111","severity":1,"message":"112","line":140,"column":41,"nodeType":"110","endLine":140,"endColumn":91},{"ruleId":"98","severity":1,"message":"99","line":150,"column":168,"nodeType":"100","messageId":"101","endLine":150,"endColumn":170},{"ruleId":"89","severity":1,"message":"113","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"114","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":16},{"ruleId":"89","severity":1,"message":"115","line":3,"column":37,"nodeType":"91","messageId":"92","endLine":3,"endColumn":46},{"ruleId":"89","severity":1,"message":"116","line":3,"column":48,"nodeType":"91","messageId":"92","endLine":3,"endColumn":56},{"ruleId":"89","severity":1,"message":"117","line":3,"column":58,"nodeType":"91","messageId":"92","endLine":3,"endColumn":63},{"ruleId":"89","severity":1,"message":"118","line":3,"column":65,"nodeType":"91","messageId":"92","endLine":3,"endColumn":74},{"ruleId":"89","severity":1,"message":"119","line":3,"column":76,"nodeType":"91","messageId":"92","endLine":3,"endColumn":85},{"ruleId":"89","severity":1,"message":"120","line":3,"column":87,"nodeType":"91","messageId":"92","endLine":3,"endColumn":96},{"ruleId":"89","severity":1,"message":"121","line":3,"column":98,"nodeType":"91","messageId":"92","endLine":3,"endColumn":106},{"ruleId":"89","severity":1,"message":"122","line":3,"column":120,"nodeType":"91","messageId":"92","endLine":3,"endColumn":126},{"ruleId":"89","severity":1,"message":"123","line":27,"column":11,"nodeType":"91","messageId":"92","endLine":27,"endColumn":27},{"ruleId":"108","severity":1,"message":"109","line":41,"column":38,"nodeType":"110","endLine":41,"endColumn":41},{"ruleId":"111","severity":1,"message":"112","line":41,"column":41,"nodeType":"110","endLine":41,"endColumn":91},{"ruleId":"89","severity":1,"message":"124","line":6,"column":18,"nodeType":"91","messageId":"92","endLine":6,"endColumn":25},{"ruleId":"89","severity":1,"message":"125","line":6,"column":38,"nodeType":"91","messageId":"92","endLine":6,"endColumn":48},{"ruleId":"108","severity":1,"message":"109","line":45,"column":42,"nodeType":"110","endLine":45,"endColumn":45},{"ruleId":"111","severity":1,"message":"112","line":45,"column":45,"nodeType":"110","endLine":45,"endColumn":95},{"ruleId":"89","severity":1,"message":"122","line":5,"column":120,"nodeType":"91","messageId":"92","endLine":5,"endColumn":126},{"ruleId":"89","severity":1,"message":"126","line":5,"column":140,"nodeType":"91","messageId":"92","endLine":5,"endColumn":154},{"ruleId":"89","severity":1,"message":"127","line":7,"column":48,"nodeType":"91","messageId":"92","endLine":7,"endColumn":65},{"ruleId":"89","severity":1,"message":"128","line":7,"column":67,"nodeType":"91","messageId":"92","endLine":7,"endColumn":78},{"ruleId":"129","severity":1,"message":"130","line":67,"column":13,"nodeType":"91","messageId":"131","endLine":67,"endColumn":21},{"ruleId":"95","severity":1,"message":"96","line":88,"column":15,"nodeType":"97","endLine":138,"endColumn":6},{"ruleId":"89","severity":1,"message":"105","line":94,"column":19,"nodeType":"91","messageId":"92","endLine":94,"endColumn":25},{"ruleId":"132","severity":1,"message":"133","line":103,"column":21,"nodeType":"97","messageId":"134","endLine":134,"endColumn":14},{"ruleId":"89","severity":1,"message":"135","line":104,"column":21,"nodeType":"91","messageId":"92","endLine":104,"endColumn":23},{"ruleId":"89","severity":1,"message":"136","line":106,"column":21,"nodeType":"91","messageId":"92","endLine":106,"endColumn":34},{"ruleId":"98","severity":1,"message":"99","line":111,"column":27,"nodeType":"100","messageId":"101","endLine":111,"endColumn":29},{"ruleId":"95","severity":1,"message":"137","line":138,"column":8,"nodeType":"103","endLine":138,"endColumn":10,"suggestions":"138"},{"ruleId":"95","severity":1,"message":"139","line":144,"column":8,"nodeType":"103","endLine":144,"endColumn":18,"suggestions":"140"},{"ruleId":"98","severity":1,"message":"99","line":181,"column":19,"nodeType":"100","messageId":"101","endLine":181,"endColumn":21},{"ruleId":"98","severity":1,"message":"99","line":181,"column":46,"nodeType":"100","messageId":"101","endLine":181,"endColumn":48},{"ruleId":"98","severity":1,"message":"99","line":186,"column":37,"nodeType":"100","messageId":"101","endLine":186,"endColumn":39},{"ruleId":"108","severity":1,"message":"109","line":211,"column":42,"nodeType":"110","endLine":211,"endColumn":45},{"ruleId":"111","severity":1,"message":"112","line":211,"column":45,"nodeType":"110","endLine":211,"endColumn":95},{"ruleId":"98","severity":1,"message":"99","line":213,"column":27,"nodeType":"100","messageId":"101","endLine":213,"endColumn":29},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'counter' is assigned a value but never used.","Identifier","unusedVar","'isLoading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.","ArrayExpression",["143"],"'result' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'authorArticle'. Either include it or remove the dependency array. You can also do a functional update 'setAuthorArticle(a => ...)' if you only need 'authorArticle' in the 'setAuthorArticle' call.",["144"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useState' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","'Checkbox' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Select' is defined but never used.","'handleDataSubmit' is assigned a value but never used.","'Heading' is defined but never used.","'Typography' is defined but never used.","'FormHelperText' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","no-use-before-define","'navigate' was used before it was defined.","usedBeforeDefined","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'tem', 'tem', 'tem'.","unsafeRefs","'id' is assigned a value but never used.","'fullYearPaper' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currUser'. Either include it or remove the dependency array.",["145"],"React Hook useEffect has missing dependencies: 'currPageTotal' and 'papers'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrPaper' needs the current value of 'papers'.",["146"],"no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [userInfo]",{"range":"155","text":"156"},"Update the dependencies array to be: [authorArticle, authorIDArray]",{"range":"157","text":"158"},"Update the dependencies array to be: [currUser]",{"range":"159","text":"160"},"Update the dependencies array to be: [currPage, currPageTotal, papers]",{"range":"161","text":"162"},[2868,2870],"[userInfo]",[4152,4167],"[authorArticle, authorIDArray]",[4901,4903],"[currUser]",[5057,5067],"[currPage, currPageTotal, papers]"]