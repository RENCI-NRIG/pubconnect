[{"/usr/src/app/src/index.js":"1","/usr/src/app/src/reportWebVitals.js":"2","/usr/src/app/src/App.js":"3","/usr/src/app/src/views/Home.js":"4","/usr/src/app/src/views/Submit.js":"5","/usr/src/app/src/views/Login.js":"6","/usr/src/app/src/views/Verify.js":"7"},{"size":500,"mtime":1607468872912,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1607468872913,"results":"10","hashOfConfig":"9"},{"size":535,"mtime":1617247618900,"results":"11","hashOfConfig":"9"},{"size":6910,"mtime":1618777438399,"results":"12","hashOfConfig":"9"},{"size":2193,"mtime":1617248426326,"results":"13","hashOfConfig":"9"},{"size":5419,"mtime":1618440596775,"results":"14","hashOfConfig":"9"},{"size":11092,"mtime":1618778893366,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1vlkc7c",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/usr/src/app/src/index.js",[],["34","35"],"/usr/src/app/src/reportWebVitals.js",[],"/usr/src/app/src/App.js",[],"/usr/src/app/src/views/Home.js",["36","37","38","39","40","41","42","43","44","45","46","47","48","49"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport PubConnectSmall from '../PC-small.png';\nimport { Link } from '@reach/router';\nimport '../App.css';\n\nimport { Button, Card, CardContent, Checkbox, Typography, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        margin: theme.spacing(2),\n        backgroundColor: '#d9d9d9'\n    },\n    link_button: {\n        margin: theme.spacing(2),\n        textDecoration: 'none'\n    }\n}))\n\nfunction Home(props) {\n    let userInfo;\n    if (sessionStorage.getItem('login') === null) {\n        userInfo = props.location.state.userInfo;\n        sessionStorage.setItem('login', JSON.stringify(userInfo))\n    }\n    else {\n        userInfo = JSON.parse(sessionStorage.getItem('login'))\n    }\n    let counter = 0;\n    const classes = useStyles();\n    const [isLoading, setLoading] = useState(true);\n    const [authorIDArray, setAuthorIDArray] = useState([]);\n    const [authorArticle, setAuthorArticle] = useState([]);\n    const [checkedArray, setCheckArray] = useState(sessionStorage.getItem('home') === null ? [] : JSON.parse(sessionStorage.getItem('home')));\n\n    function capitalizeFirstLetter(s) {\n        return s[0].toUpperCase() + s.slice(1);\n    }\n\n    function capitalizeAuthorName(s) {\n        s = capitalizeFirstLetter(s)\n        return s.replaceAll(/ [a-z]/g, z => z.toUpperCase());\n    }\n\n    function findAfN(author_lists, author_id) {\n        for (let i = 0; i < author_lists.length; i++) {\n            let curr_author = author_lists[i];\n            if (curr_author['AuId'] === author_id) {\n                return curr_author['AfN'];\n            }\n        }\n    }\n\n    useEffect(async () => {\n        let tem = [];\n        for await (let i of userInfo[0]) {\n            let lowerCaseName = i.toLowerCase();\n            axios({\n                method: 'GET',\n                url: 'https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate',\n                params: {\n                    expr: `Composite(AA.AuN=='${lowerCaseName}')`,\n                    attributes: 'AA.AuId,AA.AuN',\n                    'subscription-key': 'f6714001211242e982d92a3646ececed',\n                    count: 100\n                }\n            }).then(res => {\n                let ids = new Set();\n                for (let article in res.data.entities) {\n                    for (let author in res.data.entities[article].AA) {\n                        if (res.data.entities[article].AA[author].AuN == lowerCaseName) {\n                            ids.add(res.data.entities[article].AA[author].AuId);\n                        }\n                    }\n                }\n                tem.push(Array.from(ids));\n                if (tem.length == userInfo.length) {\n                    let newArray = Array.prototype.concat.apply([], tem);\n                    newArray.sort();\n                    setAuthorIDArray(newArray);\n                }\n            }).catch(e => {\n                console.log(e);\n            })\n        }\n    }, [])\n\n    useEffect(async () => {\n        let tem = [];\n        let visited = [];\n        for (let index in authorIDArray) {\n            const currentAuthorID = authorIDArray[index];\n            const result = await axios({\n                method: 'GET',\n                url: 'https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate',\n                params: {\n                    expr: `Composite(AA.AuId=${currentAuthorID})`,\n                    attributes: 'AA.AuId,AA.AfN,AA.AuN,DOI,Id,Ti,VFN,Y,CC',\n                    'subscription-key': 'f6714001211242e982d92a3646ececed',\n                    count: 1000\n                }\n            }).then(res => {\n                if (res.data.entities.length !== 0) {\n                    tem.push([currentAuthorID, findAfN(res.data.entities[0]['AA'],currentAuthorID), res.data.entities[0]]);\n                }\n                visited.push(\"1\");\n                if (visited.length == authorIDArray.length) {\n                    setAuthorArticle(authorArticle.concat(tem));\n                }\n            }).catch(e => {\n                console.log(e);\n            })\n        }\n    }, [authorIDArray])\n\n    const handleCheckBox = props => {\n        let index = checkedArray.indexOf(props);\n        if (index !== -1) {\n            let newArray = [...checkedArray];\n            newArray.splice(index, 1);\n            setCheckArray(newArray);\n            console.log(newArray)\n        }\n        else {\n            let newArray = [...checkedArray, props];\n            setCheckArray(newArray);\n            console.log(newArray)\n        }\n    }\n\n    const renderAuthorList = authors => {\n        let authorList = \"\";\n        for (let id in authors) {\n            if (authorList !== '') authorList += \", \"\n            authorList += capitalizeAuthorName(authors[id].AuN)\n        }\n        return authorList;\n    }\n\n    return (\n        <div class=\"container\">\n            <div className=\"logoBar\"><a><img className=\"logo-small\" src={PubConnectSmall}></img></a></div>\n            <Typography><Link className=\"clean-button\" to='/'><Button variant=\"outlined\" color=\"primary\" onClick={() => sessionStorage.clear()}><ReplayIcon />Start Over</Button></Link></Typography>\n            <div className=\"home_text\"><p>Based on the name(s) and email address you provided, we have found <b>{authorArticle.length}</b> possible authors listed in Microsoft Academic that could be you. Please select those papers below that are, in fact, authored by you.</p>\n\n                <p> Once you complete this step, we confirm which Microsoft Academic IDs are yours and then we will show you a listing of all the papers listed in Microsoft Academic that you have written since 2011.</p>\n\n                <i>At the end of the survey, we will provide you with a link(s) to your paper listings in Microsoft Academic. If you have more than one listing because Microsoft Academic shows more than one name for you, we will provide you with some brief instructions on how to merge your identities in Microsoft Academic if you would like to do so.</i>\n            </div>\n            {authorArticle.map(this_author => <Card className={classes.card}>\n                <CardContent><Checkbox checked={checkedArray.includes(this_author)} onClick={() => { handleCheckBox(this_author) }}></Checkbox>\n                    <Typography>{renderAuthorList(this_author[2].AA)}</Typography><Typography>{this_author[2].Ti}</Typography><Typography>{this_author[2].VFN == undefined ? \"\" : this_author[2].VFN + \", \"}{this_author[2].Y}</Typography></CardContent>\n            </Card>)}\n            <Link className={classes.link_button} to=\"/verify\" state={{ checkedArray: checkedArray, userInfo: userInfo }}><Button fullWidth variant=\"outlined\" color=\"primary\">Continue</Button></Link>\n\n        </div>\n    )\n}\n\nexport default Home;","/usr/src/app/src/views/Submit.js",["50","51","52","53","54","55","56","57","58","59","60","61","62"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, Card, CardContent, Container, Checkbox, Table, TableBody, TableCell, TableHead, TableRow, Typography, Select, makeStyles } from '@material-ui/core';\nimport '../App.css';\nimport PubConnectSmall from '../PC-small.png';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        marginTop: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    btn: {\n        marginTop: 20\n    },\n    card: {\n        backgroundColor: '#00758d',\n        color: 'white'\n    }\n}))\n\nfunction Submit(props) {\n    const classes = useStyles();\n    const userIDs = JSON.parse(sessionStorage.getItem('home'));\n    const handleDataSubmit = () => {\n        axios({\n            url: 'http://localhost:5000/insert',\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: JSON.stringify(props.location)\n        }).then(res => console.log(res))\n            .catch(e => console.log(e))\n    }\n\n    return (\n        <div className={classes.container}>\n            <div className=\"logoBar\"><a><img className=\"logo-small\" src={PubConnectSmall}></img></a></div>\n            <Card className={classes.card}><CardContent>Thank you so much for taking the time to complete this survey!\n        <hr />\n                <p>Prize:</p>\n                <p>Participation Prize | Sticker (Chameleon, FABRIC, CloudLab?) | First 175 to complete the survey\n                Postage</p>\n                <p>Second Prize | $25 Amazon Gift Card | 6 Recipients selected by Gleam.io at random</p>\n                <p>First Prize | $50 Amazon Gift Card | 3 Recipients selected by Gleam.io at random</p>\n                <p>Grand Prize | FABRIC Beta Tester or Travel | 10 Recipients selected by Gleam.io at random</p>\n            </CardContent></Card>\n            <br />\n            <Typography>We found {userIDs.length} names for you in Microsoft Academic.</Typography>\n            { userIDs.map(id => <Typography>ID: {id}</Typography>)}\n            <br />\n        </div>\n    )\n}\n\nexport default Submit;","/usr/src/app/src/views/Login.js",["63","64","65","66"],"import React, { useState } from 'react';\nimport { Link } from '@reach/router';\nimport '../App.css';\nimport PubConnectLarge from '../PC-large.png'\n\nimport { Button, Heading, TextField, Typography } from '@material-ui/core';\nimport { Card, CardContent } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport ClearIcon from '@material-ui/icons/Clear'\n\nconst useStyles = makeStyles((theme) => ({\n    input: {\n        margin: theme.spacing(1)\n    },\n    card: {\n        backgroundColor: '#00758d',\n        color: 'white',\n        fontSize: 16\n    }\n}))\n\nfunction Login() {\n    const [usernames, setUserNames] = useState(sessionStorage.getItem('login') === null ? [\"\", \"\"] : JSON.parse(sessionStorage.getItem('login')));\n    const [namesCounter, setNamesCounter] = useState([0]);\n    const [email, setEmail] = useState();\n    const classes = useStyles();\n\n    const addNameField = () => {\n        setNamesCounter([...namesCounter, namesCounter.length]);\n        setUserNames([...usernames, \"\"]);\n    }\n\n    const removeNameField = (index) => {\n        let removedArray = usernames.slice();\n        removedArray.splice(index, 1);\n        setUserNames(removedArray);\n    }\n\n    return (\n        <div className=\"login_body\">\n            <div className=\"login_wrap\">\n                <div className=\"logoBar\"><a><img className=\"login_logo\" src={PubConnectLarge}></img></a></div>\n                <div className=\"form\">\n                    <Card className={classes.card}>\n                        <CardContent>\n                            <p>Thank you for participating in our PubConnect Testbed Survey!</p>\n\n                            <p><b>Survey Goals</b> - We are conducting this survey to learn more about published papers that benefitted in some way from use of the GENI, Chameleon, or CloudLab testbeds, so we can report the impact these testbeds have had on the research community to the National Science Foundation (NSF)--the funding agency that supports the work on these testbeds, and\n                to inform the design of an application that will help authors and testbed developers track publications that reference the use of a testbed.</p>\n\n                            <p><b>How the Survey Results will be Used</b> -\n                As stated above, we will use the citations to report on the testbeds’ impact to NSF.\n                We may also list the citations on the testbeds’ websites. For instance, GENI papers are listed on the GENI website.</p>\n\n                            <p><b>How the Survey Works</b> -\n                We begin by trying to identify you in Microsoft Academic by whatever name(s) you have published under. Then we will show you a list of papers you have written since 2011--when the first of these testbeds was introduced--and ask you to select the testbed(s) that were used in the research that led you to write the paper.</p>\n                        </CardContent>\n                    </Card>\n                    <p><b>Getting Started</b> -\n                Please first enter your email address,* and full name in the fields below. If you have published under more than one name, please click the + button to add those other names.</p>\n                    <div id=\"username_group\">\n                        <div className=\"login_namefield\"><TextField variant=\"outlined\" className={classes.input} label=\"Email\" fullWidth=\"true\" placeholder=\"john.doe@gmail.com\" onChange={(e) => { setEmail(e.target.value) }}></TextField></div>\n                        {usernames.map((username, index) =>\n                            <div key=\"index\" className=\"login_namefield\"><TextField variant=\"outlined\" label=\"Full Name\" fullWidth=\"true\" className={classes.input} value={username} placeholder=\"John Doe\" onChange={(e) => {\n                                let newArray = usernames.slice();\n                                newArray[index] = e.target.value;\n                                setUserNames(newArray);\n                            }}></TextField>{index === 0 ? <span /> : <ToggleButton size=\"small\" onClick={() => removeNameField(index)}><ClearIcon /></ToggleButton>}</div>)}\n                        <br />\n                        <div><ToggleButton size=\"small\" className=\"toggle_addName\" onClick={addNameField}><AddIcon /></ToggleButton> Add another name you have published under</div>\n                        <br />\n                        <Link className=\"login_button\" to=\"/home\" state={{ userInfo: [usernames, email] }} > <Button fullWidth=\"true\" variant=\"outlined\" size=\"large\" color=\"primary\">Start Survey</Button></Link>\n                    </div>\n                </div >\n            </div>\n            <footer className=\"login_footer\">* Your email address will not be shared beyond the members of the group conducting the survey (i.e., Ilya Baldin, Paul Ruth, Brittany Todd, Bo Zhou, and Laura Christopherson at RENCI, UNC-Chapel Hill). We are asking for it\n            in case it is helpful in identifying you in Microsoft Academic,\n            in case you are interested in using or testing publication tracking app once it is ready,\n            and to contact you if you win the raffles.\n                No other personal information about you will be asked in the course of this survey.</footer>\n        </div>\n    )\n}\n\nexport default Login;","/usr/src/app/src/views/Verify.js",["67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":30,"column":9,"nodeType":"94","messageId":"95","endLine":30,"endColumn":16},{"ruleId":"92","severity":1,"message":"96","line":32,"column":12,"nodeType":"94","messageId":"95","endLine":32,"endColumn":21},{"ruleId":"92","severity":1,"message":"97","line":32,"column":23,"nodeType":"94","messageId":"95","endLine":32,"endColumn":33},{"ruleId":"98","severity":1,"message":"99","line":55,"column":15,"nodeType":"100","endLine":87,"endColumn":6},{"ruleId":"101","severity":1,"message":"102","line":72,"column":71,"nodeType":"103","messageId":"104","endLine":72,"endColumn":73},{"ruleId":"101","severity":1,"message":"102","line":78,"column":32,"nodeType":"103","messageId":"104","endLine":78,"endColumn":34},{"ruleId":"98","severity":1,"message":"105","line":87,"column":8,"nodeType":"106","endLine":87,"endColumn":10,"suggestions":"107"},{"ruleId":"98","severity":1,"message":"99","line":89,"column":15,"nodeType":"100","endLine":115,"endColumn":6},{"ruleId":"92","severity":1,"message":"108","line":94,"column":19,"nodeType":"94","messageId":"95","endLine":94,"endColumn":25},{"ruleId":"101","severity":1,"message":"102","line":108,"column":36,"nodeType":"103","messageId":"104","endLine":108,"endColumn":38},{"ruleId":"98","severity":1,"message":"109","line":115,"column":8,"nodeType":"106","endLine":115,"endColumn":23,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":143,"column":38,"nodeType":"113","endLine":143,"endColumn":41},{"ruleId":"114","severity":1,"message":"115","line":143,"column":41,"nodeType":"113","endLine":143,"endColumn":91},{"ruleId":"101","severity":1,"message":"102","line":153,"column":159,"nodeType":"103","messageId":"104","endLine":153,"endColumn":161},{"ruleId":"92","severity":1,"message":"116","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"117","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":16},{"ruleId":"92","severity":1,"message":"118","line":3,"column":37,"nodeType":"94","messageId":"95","endLine":3,"endColumn":46},{"ruleId":"92","severity":1,"message":"119","line":3,"column":48,"nodeType":"94","messageId":"95","endLine":3,"endColumn":56},{"ruleId":"92","severity":1,"message":"120","line":3,"column":58,"nodeType":"94","messageId":"95","endLine":3,"endColumn":63},{"ruleId":"92","severity":1,"message":"121","line":3,"column":65,"nodeType":"94","messageId":"95","endLine":3,"endColumn":74},{"ruleId":"92","severity":1,"message":"122","line":3,"column":76,"nodeType":"94","messageId":"95","endLine":3,"endColumn":85},{"ruleId":"92","severity":1,"message":"123","line":3,"column":87,"nodeType":"94","messageId":"95","endLine":3,"endColumn":96},{"ruleId":"92","severity":1,"message":"124","line":3,"column":98,"nodeType":"94","messageId":"95","endLine":3,"endColumn":106},{"ruleId":"92","severity":1,"message":"125","line":3,"column":120,"nodeType":"94","messageId":"95","endLine":3,"endColumn":126},{"ruleId":"92","severity":1,"message":"126","line":27,"column":11,"nodeType":"94","messageId":"95","endLine":27,"endColumn":27},{"ruleId":"111","severity":1,"message":"112","line":41,"column":38,"nodeType":"113","endLine":41,"endColumn":41},{"ruleId":"114","severity":1,"message":"115","line":41,"column":41,"nodeType":"113","endLine":41,"endColumn":91},{"ruleId":"92","severity":1,"message":"127","line":6,"column":18,"nodeType":"94","messageId":"95","endLine":6,"endColumn":25},{"ruleId":"92","severity":1,"message":"128","line":6,"column":38,"nodeType":"94","messageId":"95","endLine":6,"endColumn":48},{"ruleId":"111","severity":1,"message":"112","line":45,"column":42,"nodeType":"113","endLine":45,"endColumn":45},{"ruleId":"114","severity":1,"message":"115","line":45,"column":45,"nodeType":"113","endLine":45,"endColumn":95},{"ruleId":"92","severity":1,"message":"125","line":5,"column":120,"nodeType":"94","messageId":"95","endLine":5,"endColumn":126},{"ruleId":"92","severity":1,"message":"129","line":5,"column":140,"nodeType":"94","messageId":"95","endLine":5,"endColumn":154},{"ruleId":"92","severity":1,"message":"130","line":7,"column":48,"nodeType":"94","messageId":"95","endLine":7,"endColumn":65},{"ruleId":"92","severity":1,"message":"131","line":7,"column":67,"nodeType":"94","messageId":"95","endLine":7,"endColumn":78},{"ruleId":"132","severity":1,"message":"133","line":66,"column":13,"nodeType":"94","messageId":"134","endLine":66,"endColumn":21},{"ruleId":"92","severity":1,"message":"135","line":79,"column":12,"nodeType":"94","messageId":"95","endLine":79,"endColumn":20},{"ruleId":"92","severity":1,"message":"136","line":79,"column":22,"nodeType":"94","messageId":"95","endLine":79,"endColumn":33},{"ruleId":"98","severity":1,"message":"99","line":99,"column":15,"nodeType":"100","endLine":149,"endColumn":6},{"ruleId":"92","severity":1,"message":"108","line":105,"column":19,"nodeType":"94","messageId":"95","endLine":105,"endColumn":25},{"ruleId":"137","severity":1,"message":"138","line":114,"column":21,"nodeType":"100","messageId":"139","endLine":145,"endColumn":14},{"ruleId":"92","severity":1,"message":"140","line":115,"column":21,"nodeType":"94","messageId":"95","endLine":115,"endColumn":23},{"ruleId":"92","severity":1,"message":"141","line":117,"column":21,"nodeType":"94","messageId":"95","endLine":117,"endColumn":34},{"ruleId":"101","severity":1,"message":"102","line":122,"column":27,"nodeType":"103","messageId":"104","endLine":122,"endColumn":29},{"ruleId":"98","severity":1,"message":"142","line":149,"column":8,"nodeType":"106","endLine":149,"endColumn":10,"suggestions":"143"},{"ruleId":"98","severity":1,"message":"144","line":155,"column":8,"nodeType":"106","endLine":155,"endColumn":18,"suggestions":"145"},{"ruleId":"101","severity":1,"message":"102","line":193,"column":19,"nodeType":"103","messageId":"104","endLine":193,"endColumn":21},{"ruleId":"101","severity":1,"message":"102","line":193,"column":46,"nodeType":"103","messageId":"104","endLine":193,"endColumn":48},{"ruleId":"101","severity":1,"message":"102","line":198,"column":37,"nodeType":"103","messageId":"104","endLine":198,"endColumn":39},{"ruleId":"111","severity":1,"message":"112","line":223,"column":42,"nodeType":"113","endLine":223,"endColumn":45},{"ruleId":"114","severity":1,"message":"115","line":223,"column":45,"nodeType":"113","endLine":223,"endColumn":95},{"ruleId":"101","severity":1,"message":"102","line":225,"column":27,"nodeType":"103","messageId":"104","endLine":225,"endColumn":29},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'counter' is assigned a value but never used.","Identifier","unusedVar","'isLoading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.","ArrayExpression",["148"],"'result' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'authorArticle'. Either include it or remove the dependency array. You can also do a functional update 'setAuthorArticle(a => ...)' if you only need 'authorArticle' in the 'setAuthorArticle' call.",["149"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useState' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","'Checkbox' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Select' is defined but never used.","'handleDataSubmit' is assigned a value but never used.","'Heading' is defined but never used.","'Typography' is defined but never used.","'FormHelperText' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","no-use-before-define","'navigate' was used before it was defined.","usedBeforeDefined","'authorID' is assigned a value but never used.","'setAuthorID' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'tem', 'tem', 'tem'.","unsafeRefs","'id' is assigned a value but never used.","'fullYearPaper' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currUser' and 'saveUser'. Either include them or remove the dependency array.",["150"],"React Hook useEffect has missing dependencies: 'currPageTotal' and 'papers'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrPaper' needs the current value of 'papers'.",["151"],"no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [userInfo]",{"range":"160","text":"161"},"Update the dependencies array to be: [authorArticle, authorIDArray]",{"range":"162","text":"163"},"Update the dependencies array to be: [currUser, saveUser]",{"range":"164","text":"165"},"Update the dependencies array to be: [currPage, currPageTotal, papers]",{"range":"166","text":"167"},[3091,3093],"[userInfo]",[4225,4240],"[authorArticle, authorIDArray]",[5183,5185],"[currUser, saveUser]",[5339,5349],"[currPage, currPageTotal, papers]"]